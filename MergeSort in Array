package javacodes;
public class MergeSortArray {
    public static void main(String[] args) {
        int [] arr = {2,5,1,9,8,4,6,3,10,7};
        traverse(arr);
        mergeSort(arr, 0, arr.length - 1);
        traverse(arr);
    }

    public static void traverse(int [] arr)
    {
        for (int i : arr) {
            System.out.print(i + " ");
        }
        System.out.println();
    }

    public static void mergeSort(int [] arr, int s, int e)
    {
        if(s >= e)
        {
            return;
        }

        int mid = s + (e - s)/2;
        mergeSort(arr, s, mid);
        mergeSort(arr, mid+1, e);

        merge(arr, s, mid, e);
    }

    public static void merge(int [] arr,int s, int mid, int e)
    {
        int n1 = mid - s + 1;
        int n2 = e - mid;

        int [] first = new int[n1];
        int [] second = new int[n2];

        int firstArrayIndex = s;
        int secondArrayIndex = s;
        int mainArrayIndex = s;

        for (int i = 0; i < first.length; i++) {
            first[i] = arr[mainArrayIndex++];
        }
        for (int i = 0; i < second.length; i++) {
            second[i] = arr[mainArrayIndex++];
        }

        firstArrayIndex = 0;
        secondArrayIndex = 0;
        mainArrayIndex = s;

        while(firstArrayIndex < n1 && secondArrayIndex < n2)
        {
            if(first[firstArrayIndex] < second[secondArrayIndex])
            {
                arr[mainArrayIndex++] = first[firstArrayIndex++];
            }
            else
            {
                arr[mainArrayIndex++] = second[secondArrayIndex++];
            }
        }

        while(firstArrayIndex < n1)
        {
            arr[mainArrayIndex++] = first[firstArrayIndex++];
        }
        while(secondArrayIndex < n2)
        {
            arr[mainArrayIndex++] = second[secondArrayIndex++];
        }
    }
}
